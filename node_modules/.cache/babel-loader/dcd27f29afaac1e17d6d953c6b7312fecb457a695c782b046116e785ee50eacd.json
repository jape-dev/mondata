{"ast":null,"code":"var _jsxFileName = \"/Users/jamespatten/Documents/repos/mondata/src/Screens/Connector.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport \"../App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport { Dropdown, Button } from \"monday-ui-react-core\";\nimport Nango from \"@nangohq/frontend\";\nimport { FacebookService, UsersService, MondayService } from \"../api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nexport const Connector = () => {\n  _s();\n  const [connector, setConnector] = useState();\n  const [connected, setConnected] = useState(false);\n  const [user, setUser] = useState();\n  const [accountOptions, setAccountOptions] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState();\n  const [fields, setFields] = useState([]);\n  const [selectedFields, setSelectedFields] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [selectedBoardOption, setSelectedBoardOption] = useState();\n  const [boardColumns, setBoardColumns] = useState([]);\n  const [selectedColumnOption, setSelectedColumnOption] = useState();\n  const [columnType, setColumnType] = useState();\n  const [date, setDate] = useState();\n  const getIconUrl = imgPath => {\n    return require(`../Static/images/${imgPath}.png`);\n  };\n  const handleRunClick = () => {\n    if (user !== null && user !== void 0 && user.monday_token && selectedBoardOption && selectedColumnOption && columnType && selectedAccount && date) {\n      MondayService.mondayItems(user.monday_token, selectedBoardOption === null || selectedBoardOption === void 0 ? void 0 : selectedBoardOption.value, selectedColumnOption === null || selectedColumnOption === void 0 ? void 0 : selectedColumnOption.value).then(items => {\n        const endDate = new Date();\n        const startDate = new Date();\n        startDate.setDate(endDate.getDate() - date.value.parseInt());\n        const queryData = {\n          monday_items: items,\n          account_id: selectedAccount === null || selectedAccount === void 0 ? void 0 : selectedAccount.value,\n          metrics: fields.map(field => field.value),\n          type: columnType === null || columnType === void 0 ? void 0 : columnType.value,\n          start_date: startDate.toISOString().split(\"T\")[0],\n          end_date: endDate.toISOString().split(\"T\")[0]\n        };\n        const body = {\n          query: queryData,\n          user: user\n        };\n        FacebookService.facebookFetchData(body).then(data => {\n          if (user.monday_token) {\n            MondayService.mondayAddData(user === null || user === void 0 ? void 0 : user.monday_token, selectedBoardOption.value, data);\n          }\n        });\n      });\n    }\n  };\n  const handleFieldSelect = selectedField => {\n    setSelectedFields(prevSelectedFields => {\n      // Check if the option is already selected\n      if (prevSelectedFields.some(field => field === selectedField)) {\n        // If it is, remove it from the selection\n        return prevSelectedFields.filter(field => field !== selectedField);\n      } else {\n        // If it is not, add it to the selection\n        return [...prevSelectedFields, selectedField];\n      }\n    });\n  };\n  const options = useMemo(() => [{\n    value: \"facebook\",\n    label: \"Facebook\",\n    leftAvatar: getIconUrl(\"facebook-icon\")\n  }, {\n    value: \"instagram\",\n    label: \"Instagram\",\n    leftAvatar: getIconUrl(\"instagram-icon\")\n  }, {\n    value: \"google\",\n    label: \"Google Ads\",\n    leftAvatar: getIconUrl(\"google-ads-icon\")\n  }, {\n    value: \"google-analytics\",\n    label: \"Google Analytics\",\n    leftAvatar: getIconUrl(\"google-analytics-icon\")\n  }], []);\n  const dateOptions = useMemo(() => [{\n    value: 1,\n    label: \"Last 1 Days\"\n  }, {\n    value: 7,\n    label: \"Last 7 Days\"\n  }, {\n    value: 30,\n    label: \"Last 30 Days\"\n  }, {\n    value: 90,\n    label: \"Last 90 Days\"\n  }, {\n    value: 365,\n    label: \"Last 365 Days\"\n  }], []);\n  const typeOptions = useMemo(() => [{\n    value: \"date\",\n    label: \"Date\"\n  }, {\n    value: \"link\",\n    label: \"Link\"\n  }, {\n    value: \"text\",\n    label: \"Text\"\n  }], []);\n  async function getSessionToken() {\n    return (await monday.get(\"sessionToken\")).data;\n  }\n  async function updateUser(connectionId) {\n    const sessionToken = await getSessionToken();\n    const requestBody = {\n      scheme: \"Bearer\",\n      credentials: sessionToken\n    };\n    FacebookService.facebookLogin(connectionId, requestBody).then(user => {\n      setUser(user);\n    });\n  }\n  const nango = new Nango({\n    publicKey: \"7b73b776-3a10-41c0-a5ee-feef16d372d4\"\n  });\n  const connect = () => {\n    if (connector === \"facebook\") {\n      nango.auth(\"facebook\", \"test-connection-id\", {\n        authorization_params: {\n          config_id: \"728465868571401\"\n        }\n      }).then(result => {\n        updateUser(result.connectionId);\n        // save id to the database.\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n  useEffect(() => {\n    const fetchUser = async () => {\n      await getSessionToken().then(sessionToken => {\n        if (sessionToken) {\n          UsersService.usersReadUserByMondaySession(sessionToken).then(user => {\n            console.log(user);\n            setUser(user);\n          });\n        }\n      });\n    };\n    fetchUser();\n  }, []);\n  useEffect(() => {\n    if (connector == \"facebook\" && user !== null && user !== void 0 && user.facebook_token) {\n      setConnected(true);\n    } else {\n      setConnected(false);\n    }\n  }, [connector]);\n  useEffect(() => {\n    if (connected) {\n      if (connector === \"facebook\" && user !== null && user !== void 0 && user.facebook_token) {\n        FacebookService.facebookAdAccounts(user.facebook_token).then(accounts => {\n          setAccountOptions(accounts);\n        });\n        FacebookService.facebookFields().then(fields => {\n          console.log(fields);\n          setFields(fields);\n        });\n      }\n    }\n  }, [connected, user]);\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.monday_token) {\n      MondayService.mondayBoards(user.monday_token).then(boards => {\n        const boardOptions = boards.map(board => ({\n          value: board.id,\n          label: board.name\n        }));\n        setBoards(boardOptions);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (selectedBoardOption && user !== null && user !== void 0 && user.monday_token && columnType) {\n      MondayService.mondayBoardColumns(selectedBoardOption.value, user.monday_token, columnType.value).then(columns => {\n        const columnOptions = columns.map(column => ({\n          value: column.id,\n          label: column.title\n        }));\n        setBoardColumns(columnOptions);\n      });\n    }\n  }, [selectedBoardOption, columnType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-gray rounded-md p-5 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-gray-500 text-sm\",\n        children: \"* Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Select an application\",\n        options: options,\n        onOptionSelect: e => setConnector(e.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), connected === false && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => connect(),\n        className: \"mt-2\",\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), connected && accountOptions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-grey rounded-md p-5 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-gray-500 text-sm\",\n          children: \"* Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Select an account\",\n          className: \"mb-2\",\n          options: accountOptions,\n          onOptionSelect: e => setSelectedAccount(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-gray-500 text-sm\",\n          children: \"* Fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Select fields\",\n          multi: true,\n          multiline: true,\n          options: fields,\n          onOptionSelect: e => handleFieldSelect(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-gray rounded-md p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-gray-500 text-sm\",\n          children: \"* Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: boards,\n          placeholder: \"Select a board\",\n          className: \"mb-2\",\n          onOptionSelect: e => setSelectedBoardOption(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-gray-500 text-sm\",\n          children: \"* Column Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Date or Post Url\",\n          options: typeOptions,\n          className: \"mb-2\",\n          onOptionSelect: e => setColumnType(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), (columnType === null || columnType === void 0 ? void 0 : columnType.value) === \"link\" || (columnType === null || columnType === void 0 ? void 0 : columnType.value) === \"text\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-gray-500 text-sm\",\n            children: \"* Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: boardColumns,\n            onOptionSelect: e => setSelectedColumnOption(e),\n            placeholder: \"Select column\",\n            className: \"mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-gray-500 text-sm\",\n            children: \"* Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Select a date range\",\n            options: dateOptions,\n            className: \"mb-2\",\n            onOptionSelect: e => setDate(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : (columnType === null || columnType === void 0 ? void 0 : columnType.value) === \"date\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-gray-500 text-sm\",\n            children: \"* Date Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: boardColumns,\n            onOptionSelect: e => setSelectedColumnOption(e),\n            placeholder: \"Select column\",\n            className: \"mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleRunClick,\n        className: \"mt-2\",\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n};\n_s(Connector, \"sTAr6Dnn2YR7PHeDQNnEUbjEGbM=\");\n_c = Connector;\nvar _c;\n$RefreshReg$(_c, \"Connector\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","mondaySdk","Dropdown","Button","Nango","FacebookService","UsersService","MondayService","jsxDEV","_jsxDEV","Fragment","_Fragment","monday","Connector","_s","connector","setConnector","connected","setConnected","user","setUser","accountOptions","setAccountOptions","selectedAccount","setSelectedAccount","fields","setFields","selectedFields","setSelectedFields","boards","setBoards","selectedBoardOption","setSelectedBoardOption","boardColumns","setBoardColumns","selectedColumnOption","setSelectedColumnOption","columnType","setColumnType","date","setDate","getIconUrl","imgPath","require","handleRunClick","monday_token","mondayItems","value","then","items","endDate","Date","startDate","getDate","parseInt","queryData","monday_items","account_id","metrics","map","field","type","start_date","toISOString","split","end_date","body","query","facebookFetchData","data","mondayAddData","handleFieldSelect","selectedField","prevSelectedFields","some","filter","options","label","leftAvatar","dateOptions","typeOptions","getSessionToken","get","updateUser","connectionId","sessionToken","requestBody","scheme","credentials","facebookLogin","nango","publicKey","connect","auth","authorization_params","config_id","result","catch","err","console","log","fetchUser","usersReadUserByMondaySession","facebook_token","facebookAdAccounts","accounts","facebookFields","mondayBoards","boardOptions","board","id","name","mondayBoardColumns","columns","columnOptions","column","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onOptionSelect","e","onClick","multi","multiline","_c","$RefreshReg$"],"sources":["/Users/jamespatten/Documents/repos/mondata/src/Screens/Connector.tsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport \"../App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport { Dropdown, Button } from \"monday-ui-react-core\";\nimport Nango from \"@nangohq/frontend\";\nimport {\n  FacebookService,\n  HTTPAuthorizationCredentials,\n  User,\n  UsersService,\n  MondayService,\n  QueryData,\n  ColumnData,\n  MondayItem,\n  Body_facebook_fetch_data,\n} from \"../api\";\n\nconst monday = mondaySdk();\n\ninterface Board {\n  id: string;\n  name: string;\n}\n\ninterface Option {\n  value: any;\n  label: string;\n}\n\ninterface BoardColumn {\n  id: string;\n  title: string;\n  type: string;\n}\n\nexport const Connector = () => {\n  const [connector, setConnector] = useState();\n  const [connected, setConnected] = useState(false);\n  const [user, setUser] = useState<User>();\n  const [accountOptions, setAccountOptions] = useState<Option[]>([]);\n  const [selectedAccount, setSelectedAccount] = useState<Option>();\n  const [fields, setFields] = useState<Option[]>([]);\n  const [selectedFields, setSelectedFields] = useState<Option[]>([]);\n  const [boards, setBoards] = useState<Option[]>([]);\n  const [selectedBoardOption, setSelectedBoardOption] = useState<Option>();\n  const [boardColumns, setBoardColumns] = useState<Option[]>([]);\n  const [selectedColumnOption, setSelectedColumnOption] = useState<Option>();\n  const [columnType, setColumnType] = useState<Option>();\n  const [date, setDate] = useState<Option>();\n\n  const getIconUrl = (imgPath: string) => {\n    return require(`../Static/images/${imgPath}.png`);\n  };\n\n  const handleRunClick = () => {\n    if (\n      user?.monday_token &&\n      selectedBoardOption &&\n      selectedColumnOption &&\n      columnType &&\n      selectedAccount &&\n      date\n    ) {\n      MondayService.mondayItems(\n        user.monday_token,\n        selectedBoardOption?.value,\n        selectedColumnOption?.value\n      ).then((items: MondayItem[]) => {\n        const endDate = new Date();\n        const startDate = new Date();\n        startDate.setDate(endDate.getDate() - date.value.parseInt());\n\n        const queryData: QueryData = {\n          monday_items: items,\n          account_id: selectedAccount?.value,\n          metrics: fields.map((field) => field.value),\n          type: columnType?.value,\n          start_date: startDate.toISOString().split(\"T\")[0],\n          end_date: endDate.toISOString().split(\"T\")[0],\n        };\n\n        const body: Body_facebook_fetch_data = {\n          query: queryData,\n          user: user,\n        };\n        FacebookService.facebookFetchData(body).then((data: ColumnData[]) => {\n          if (user.monday_token) {\n            MondayService.mondayAddData(\n              user?.monday_token,\n              selectedBoardOption.value,\n              data\n            );\n          }\n        });\n      });\n    }\n  };\n\n  const handleFieldSelect = (selectedField: Option) => {\n    setSelectedFields((prevSelectedFields: Option[]) => {\n      // Check if the option is already selected\n      if (prevSelectedFields.some((field: Option) => field === selectedField)) {\n        // If it is, remove it from the selection\n        return prevSelectedFields.filter(\n          (field: Option) => field !== selectedField\n        );\n      } else {\n        // If it is not, add it to the selection\n        return [...prevSelectedFields, selectedField];\n      }\n    });\n  };\n\n  const options = useMemo(\n    () => [\n      {\n        value: \"facebook\",\n        label: \"Facebook\",\n        leftAvatar: getIconUrl(\"facebook-icon\"),\n      },\n      {\n        value: \"instagram\",\n        label: \"Instagram\",\n        leftAvatar: getIconUrl(\"instagram-icon\"),\n      },\n      {\n        value: \"google\",\n        label: \"Google Ads\",\n        leftAvatar: getIconUrl(\"google-ads-icon\"),\n      },\n      {\n        value: \"google-analytics\",\n        label: \"Google Analytics\",\n        leftAvatar: getIconUrl(\"google-analytics-icon\"),\n      },\n    ],\n    []\n  );\n\n  const dateOptions = useMemo(\n    () => [\n      { value: 1, label: \"Last 1 Days\" },\n      { value: 7, label: \"Last 7 Days\" },\n      { value: 30, label: \"Last 30 Days\" },\n      { value: 90, label: \"Last 90 Days\" },\n      { value: 365, label: \"Last 365 Days\" },\n    ],\n    []\n  );\n\n  const typeOptions = useMemo(\n    () => [\n      { value: \"date\", label: \"Date\" },\n      { value: \"link\", label: \"Link\" },\n      { value: \"text\", label: \"Text\" },\n    ],\n    []\n  );\n\n  async function getSessionToken() {\n    return (await monday.get(\"sessionToken\")).data;\n  }\n\n  async function updateUser(connectionId: string) {\n    const sessionToken = await getSessionToken();\n\n    const requestBody: HTTPAuthorizationCredentials = {\n      scheme: \"Bearer\",\n      credentials: sessionToken,\n    };\n\n    FacebookService.facebookLogin(connectionId, requestBody).then(\n      (user: User) => {\n        setUser(user);\n      }\n    );\n  }\n\n  const nango = new Nango({\n    publicKey: \"7b73b776-3a10-41c0-a5ee-feef16d372d4\",\n  });\n\n  const connect = () => {\n    if (connector === \"facebook\") {\n      nango\n        .auth(\"facebook\", \"test-connection-id\", {\n          authorization_params: { config_id: \"728465868571401\" },\n        })\n        .then((result) => {\n          updateUser(result.connectionId);\n          // save id to the database.\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      await getSessionToken().then((sessionToken) => {\n        if (sessionToken) {\n          UsersService.usersReadUserByMondaySession(sessionToken).then(\n            (user: User) => {\n              console.log(user);\n              setUser(user);\n            }\n          );\n        }\n      });\n    };\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    if (connector == \"facebook\" && user?.facebook_token) {\n      setConnected(true);\n    } else {\n      setConnected(false);\n    }\n  }, [connector]);\n\n  useEffect(() => {\n    if (connected) {\n      if (connector === \"facebook\" && user?.facebook_token) {\n        FacebookService.facebookAdAccounts(user.facebook_token).then(\n          (accounts) => {\n            setAccountOptions(accounts);\n          }\n        );\n        FacebookService.facebookFields().then((fields) => {\n          console.log(fields);\n          setFields(fields);\n        });\n      }\n    }\n  }, [connected, user]);\n\n  useEffect(() => {\n    if (user?.monday_token) {\n      MondayService.mondayBoards(user.monday_token).then((boards: Board[]) => {\n        const boardOptions: Option[] = boards.map((board: Board) => ({\n          value: board.id,\n          label: board.name,\n        }));\n        setBoards(boardOptions);\n      });\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (selectedBoardOption && user?.monday_token && columnType) {\n      MondayService.mondayBoardColumns(\n        selectedBoardOption.value,\n        user.monday_token,\n        columnType.value\n      ).then((columns: BoardColumn[]) => {\n        const columnOptions: Option[] = columns.map((column: BoardColumn) => ({\n          value: column.id,\n          label: column.title,\n        }));\n        setBoardColumns(columnOptions);\n      });\n    }\n  }, [selectedBoardOption, columnType]);\n\n  return (\n    <div className=\"p-2\">\n      <div className=\"border-2 border-gray rounded-md p-5 mb-2\">\n        <p className=\"font-bold text-gray-500 text-sm\">* Application</p>\n        <Dropdown\n          placeholder=\"Select an application\"\n          options={options}\n          onOptionSelect={(e: any) => setConnector(e.value)}\n        />\n        {connected === false && (\n          <Button onClick={() => connect()} className=\"mt-2\">\n            Connect\n          </Button>\n        )}\n      </div>\n      {connected && accountOptions && (\n        <>\n          <div className=\"border-2 border-grey rounded-md p-5 mb-2\">\n            <p className=\"font-bold text-gray-500 text-sm\">* Account</p>\n            <Dropdown\n              placeholder=\"Select an account\"\n              className=\"mb-2\"\n              options={accountOptions}\n              onOptionSelect={(e: Option) => setSelectedAccount(e)}\n            />\n            <p className=\"font-bold text-gray-500 text-sm\">* Fields</p>\n            <Dropdown\n              placeholder=\"Select fields\"\n              multi\n              multiline\n              options={fields}\n              onOptionSelect={(e: Option) => handleFieldSelect(e)}\n            />\n          </div>\n          <div className=\"border-2 border-gray rounded-md p-5\">\n            <p className=\"font-bold text-gray-500 text-sm\">* Board</p>\n            <Dropdown\n              options={boards}\n              placeholder=\"Select a board\"\n              className=\"mb-2\"\n              onOptionSelect={(e: Option) => setSelectedBoardOption(e)}\n            />\n            <p className=\"font-bold text-gray-500 text-sm\">* Column Type</p>\n            <Dropdown\n              placeholder=\"Date or Post Url\"\n              options={typeOptions}\n              className=\"mb-2\"\n              onOptionSelect={(e: Option) => setColumnType(e)}\n            />\n            {columnType?.value === \"link\" || columnType?.value === \"text\" ? (\n              <>\n                <p className=\"font-bold text-gray-500 text-sm\">* Column</p>\n                <Dropdown\n                  options={boardColumns}\n                  onOptionSelect={(e: Option) => setSelectedColumnOption(e)}\n                  placeholder=\"Select column\"\n                  className=\"mb-2\"\n                />\n                <p className=\"font-bold text-gray-500 text-sm\">* Date</p>\n                <Dropdown\n                  placeholder=\"Select a date range\"\n                  options={dateOptions}\n                  className=\"mb-2\"\n                  onOptionSelect={(e: Option) => setDate(e)}\n                />\n              </>\n            ) : columnType?.value === \"date\" ? (\n              <>\n                <p className=\"font-bold text-gray-500 text-sm\">* Date Column</p>\n                <Dropdown\n                  options={boardColumns}\n                  onOptionSelect={(e: Option) => setSelectedColumnOption(e)}\n                  placeholder=\"Select column\"\n                  className=\"mb-2\"\n                />\n              </>\n            ) : null}\n          </div>\n          <Button onClick={handleRunClick} className=\"mt-2\">\n            Run\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
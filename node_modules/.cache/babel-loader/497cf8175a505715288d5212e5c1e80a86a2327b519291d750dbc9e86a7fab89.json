{"ast":null,"code":"var _jsxFileName = \"/Users/jamespatten/Documents/repos/mondata/src/Screens/Connector.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport \"../App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport { Dropdown, Button } from \"monday-ui-react-core\";\nimport Nango from \"@nangohq/frontend\";\nimport { FacebookService, UsersService, MondayService } from \"../api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst monday = mondaySdk();\nexport const Connector = () => {\n  _s();\n  const [connector, setConnector] = useState();\n  const [connected, setConnected] = useState(false);\n  const [user, setUser] = useState();\n  const [accountOptions, setAccountOptions] = useState([]);\n  const [selectedAccount, setSelectedAccount] = useState();\n  const [fields, setFields] = useState([]);\n  const [selectedFields, setSelectedFields] = useState([]);\n  const [boards, setBoards] = useState([]);\n  const [selectedBoardOption, setSelectedBoardOption] = useState();\n  const [boardColumns, setBoardColumns] = useState([]);\n  const [selectedColumnOption, setSelectedColumnOption] = useState();\n  const [columnType, setColumnType] = useState();\n  const getIconUrl = imgPath => {\n    return require(`../Static/images/${imgPath}.png`);\n  };\n\n  // const handleRunClick = () => {\n  //   if (user?.monday_token && selectedBoardOption && selectedColumnOption) {\n  //   MondayService.mondayItems(user.monday_token, selectedBoardOption?.value, selectedColumnOption?.value).then(\n  //     (items: MondayItem[]) => {\n  //       const queryData: QueryData = {\n  //         monday_items: items,\n  //         account_id: selectedAccount?.id,\n  //         metrics: fields.map((field) => field.value),\n  //         tyoe: columnType?.value,\n  //         user\n  //       }\n  //       FacebookService.facebookFetchData(queryData).then(data: ColumnData[] => {\n  //         MondayService.mondayAddData(user.monday_token, selectedBoardOption.value, data)\n  //       })\n  //     }\n  //   );\n  //   }\n  // }\n\n  const handleFieldSelect = selectedField => {\n    setSelectedFields(prevSelectedFields => {\n      // Check if the option is already selected\n      if (prevSelectedFields.some(field => field === selectedField)) {\n        // If it is, remove it from the selection\n        return prevSelectedFields.filter(field => field !== selectedField);\n      } else {\n        // If it is not, add it to the selection\n        return [...prevSelectedFields, selectedField];\n      }\n    });\n  };\n  const options = useMemo(() => [{\n    value: \"facebook\",\n    label: \"Facebook\",\n    leftAvatar: getIconUrl(\"facebook-icon\")\n  }, {\n    value: \"instagram\",\n    label: \"Instagram\",\n    leftAvatar: getIconUrl(\"instagram-icon\")\n  }, {\n    value: \"google\",\n    label: \"Google Ads\",\n    leftAvatar: getIconUrl(\"google-ads-icon\")\n  }, {\n    value: \"google-analytics\",\n    label: \"Google Analytics\",\n    leftAvatar: getIconUrl(\"google-analytics-icon\")\n  }], []);\n  const dateOptions = useMemo(() => [{\n    value: \"last_1_days\",\n    label: \"Last 1 Days\"\n  }, {\n    value: \"last_7_days\",\n    label: \"Last 7 Days\"\n  }, {\n    value: \"last_30_days\",\n    label: \"Last 30 Days\"\n  }, {\n    value: \"last_90_days\",\n    label: \"Last 90 Days\"\n  }, {\n    value: \"last_365_days\",\n    label: \"Last 365 Days\"\n  }], []);\n  const typeOptions = useMemo(() => [{\n    value: \"date\",\n    label: \"Date\"\n  }, {\n    value: \"link\",\n    label: \"Link\"\n  }, {\n    value: \"text\",\n    label: \"Text\"\n  }], []);\n  async function getSessionToken() {\n    return (await monday.get(\"sessionToken\")).data;\n  }\n  async function updateUser(connectionId) {\n    const sessionToken = await getSessionToken();\n    const requestBody = {\n      scheme: \"Bearer\",\n      credentials: sessionToken\n    };\n    FacebookService.facebookLogin(connectionId, requestBody).then(user => {\n      setUser(user);\n    });\n  }\n  const nango = new Nango({\n    publicKey: \"7b73b776-3a10-41c0-a5ee-feef16d372d4\"\n  });\n  const connect = () => {\n    if (connector === \"facebook\") {\n      nango.auth(\"facebook\", \"test-connection-id\", {\n        authorization_params: {\n          config_id: \"728465868571401\"\n        }\n      }).then(result => {\n        updateUser(result.connectionId);\n        // save id to the database.\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n  useEffect(() => {\n    const fetchUser = async () => {\n      await getSessionToken().then(sessionToken => {\n        if (sessionToken) {\n          UsersService.usersReadUserByMondaySession(sessionToken).then(user => {\n            console.log(user);\n            setUser(user);\n          });\n        }\n      });\n    };\n    fetchUser();\n  }, []);\n  useEffect(() => {\n    if (connector == \"facebook\" && user !== null && user !== void 0 && user.facebook_token) {\n      setConnected(true);\n    } else {\n      setConnected(false);\n    }\n  }, [connector]);\n  useEffect(() => {\n    if (connected) {\n      if (connector === \"facebook\" && user !== null && user !== void 0 && user.facebook_token) {\n        FacebookService.facebookAdAccounts(user.facebook_token).then(accounts => {\n          setAccountOptions(accounts);\n        });\n        FacebookService.facebookFields().then(fields => {\n          console.log(fields);\n          setFields(fields);\n        });\n      }\n    }\n  }, [connected, user]);\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.monday_token) {\n      MondayService.mondayBoards(user.monday_token).then(boards => {\n        const boardOptions = boards.map(board => ({\n          value: board.id,\n          label: board.name\n        }));\n        setBoards(boardOptions);\n      });\n    }\n  }, [user]);\n  useEffect(() => {\n    if (selectedBoardOption && user !== null && user !== void 0 && user.monday_token && columnType) {\n      MondayService.mondayBoardColumns(selectedBoardOption.value, user.monday_token, columnType.value).then(columns => {\n        const columnOptions = columns.map(column => ({\n          value: column.id,\n          label: column.title\n        }));\n        setBoardColumns(columnOptions);\n      });\n    }\n  }, [selectedBoardOption, columnType]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-2 border-gray rounded-md p-5 mb-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-bold text-gray-500 text-sm\",\n        children: \"* Application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        placeholder: \"Select an application\",\n        options: options,\n        onOptionSelect: e => setConnector(e.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), connected === false && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => connect(),\n        className: \"mt-2\",\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), connected && accountOptions && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-grey rounded-md p-5 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-gray-500 text-sm\",\n          children: \"* Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Select an account\",\n          className: \"mb-2\",\n          options: accountOptions,\n          onOptionSelect: e => setSelectedAccount(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-gray-500 text-sm\",\n          children: \"* Fields\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Select fields\",\n          multi: true,\n          multiline: true,\n          options: fields,\n          onOptionSelect: e => handleFieldSelect(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-gray rounded-md p-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-gray-500 text-sm\",\n          children: \"* Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          options: boards,\n          placeholder: \"Select a board\",\n          className: \"mb-2\",\n          onOptionSelect: e => setSelectedBoardOption(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-bold text-gray-500 text-sm\",\n          children: \"* Column Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          placeholder: \"Date or Post Url\",\n          options: typeOptions,\n          className: \"mb-2\",\n          onOptionSelect: e => setColumnType(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), (columnType === null || columnType === void 0 ? void 0 : columnType.value) === \"link\" || (columnType === null || columnType === void 0 ? void 0 : columnType.value) === \"text\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-gray-500 text-sm\",\n            children: \"* Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: boardColumns,\n            onOptionSelect: e => setSelectedColumnOption(e),\n            placeholder: \"Select column\",\n            className: \"mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-gray-500 text-sm\",\n            children: \"* Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            placeholder: \"Select a date range\",\n            options: dateOptions,\n            className: \"mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : (columnType === null || columnType === void 0 ? void 0 : columnType.value) === \"date\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-bold text-gray-500 text-sm\",\n            children: \"* Date Column\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            options: boardColumns,\n            onOptionSelect: e => setSelectedColumnOption(e),\n            placeholder: \"Select column\",\n            className: \"mb-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleRunClick,\n        className: \"mt-2\",\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n};\n_s(Connector, \"hTWO4ujnzsx1mvhYawaH2iNSsNw=\");\n_c = Connector;\nvar _c;\n$RefreshReg$(_c, \"Connector\");","map":{"version":3,"names":["React","useState","useMemo","useEffect","mondaySdk","Dropdown","Button","Nango","FacebookService","UsersService","MondayService","jsxDEV","_jsxDEV","Fragment","_Fragment","monday","Connector","_s","connector","setConnector","connected","setConnected","user","setUser","accountOptions","setAccountOptions","selectedAccount","setSelectedAccount","fields","setFields","selectedFields","setSelectedFields","boards","setBoards","selectedBoardOption","setSelectedBoardOption","boardColumns","setBoardColumns","selectedColumnOption","setSelectedColumnOption","columnType","setColumnType","getIconUrl","imgPath","require","handleFieldSelect","selectedField","prevSelectedFields","some","field","filter","options","value","label","leftAvatar","dateOptions","typeOptions","getSessionToken","get","data","updateUser","connectionId","sessionToken","requestBody","scheme","credentials","facebookLogin","then","nango","publicKey","connect","auth","authorization_params","config_id","result","catch","err","console","log","fetchUser","usersReadUserByMondaySession","facebook_token","facebookAdAccounts","accounts","facebookFields","monday_token","mondayBoards","boardOptions","map","board","id","name","mondayBoardColumns","columns","columnOptions","column","title","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onOptionSelect","e","onClick","multi","multiline","handleRunClick","_c","$RefreshReg$"],"sources":["/Users/jamespatten/Documents/repos/mondata/src/Screens/Connector.tsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useMemo, useEffect } from \"react\";\nimport \"../App.css\";\nimport mondaySdk from \"monday-sdk-js\";\nimport \"monday-ui-react-core/dist/main.css\";\nimport { Dropdown, Button } from \"monday-ui-react-core\";\nimport Nango from \"@nangohq/frontend\";\nimport {\n  FacebookService,\n  HTTPAuthorizationCredentials,\n  User,\n  UsersService,\n  MondayService,\n  QueryData,\n  ColumnData,\n  MondayItem,\n} from \"../api\";\n\nconst monday = mondaySdk();\n\ninterface Board {\n  id: string;\n  name: string;\n}\n\ninterface Option {\n  value: string;\n  label: string;\n}\n\ninterface BoardColumn {\n  id: string;\n  title: string;\n  type: string;\n}\n\nexport const Connector = () => {\n  const [connector, setConnector] = useState();\n  const [connected, setConnected] = useState(false);\n  const [user, setUser] = useState<User>();\n  const [accountOptions, setAccountOptions] = useState<object[]>([]);\n  const [selectedAccount, setSelectedAccount] = useState<object>();\n  const [fields, setFields] = useState<object[]>([]);\n  const [selectedFields, setSelectedFields] = useState<object[]>([]);\n  const [boards, setBoards] = useState<Option[]>([]);\n  const [selectedBoardOption, setSelectedBoardOption] = useState<Option>();\n  const [boardColumns, setBoardColumns] = useState<Option[]>([]);\n  const [selectedColumnOption, setSelectedColumnOption] = useState<Option>();\n  const [columnType, setColumnType] = useState<Option>();\n\n  const getIconUrl = (imgPath: string) => {\n    return require(`../Static/images/${imgPath}.png`);\n  };\n\n  // const handleRunClick = () => {\n  //   if (user?.monday_token && selectedBoardOption && selectedColumnOption) {\n  //   MondayService.mondayItems(user.monday_token, selectedBoardOption?.value, selectedColumnOption?.value).then(\n  //     (items: MondayItem[]) => {\n  //       const queryData: QueryData = {\n  //         monday_items: items,\n  //         account_id: selectedAccount?.id,\n  //         metrics: fields.map((field) => field.value),\n  //         tyoe: columnType?.value,\n  //         user\n  //       }\n  //       FacebookService.facebookFetchData(queryData).then(data: ColumnData[] => {\n  //         MondayService.mondayAddData(user.monday_token, selectedBoardOption.value, data)\n  //       })\n  //     }\n  //   );\n  //   }\n  // }\n\n  const handleFieldSelect = (selectedField: Option) => {\n    setSelectedFields((prevSelectedFields) => {\n      // Check if the option is already selected\n      if (prevSelectedFields.some((field) => field === selectedField)) {\n        // If it is, remove it from the selection\n        return prevSelectedFields.filter((field) => field !== selectedField);\n      } else {\n        // If it is not, add it to the selection\n        return [...prevSelectedFields, selectedField];\n      }\n    });\n  };\n\n  const options = useMemo(\n    () => [\n      {\n        value: \"facebook\",\n        label: \"Facebook\",\n        leftAvatar: getIconUrl(\"facebook-icon\"),\n      },\n      {\n        value: \"instagram\",\n        label: \"Instagram\",\n        leftAvatar: getIconUrl(\"instagram-icon\"),\n      },\n      {\n        value: \"google\",\n        label: \"Google Ads\",\n        leftAvatar: getIconUrl(\"google-ads-icon\"),\n      },\n      {\n        value: \"google-analytics\",\n        label: \"Google Analytics\",\n        leftAvatar: getIconUrl(\"google-analytics-icon\"),\n      },\n    ],\n    []\n  );\n\n  const dateOptions = useMemo(\n    () => [\n      { value: \"last_1_days\", label: \"Last 1 Days\" },\n      { value: \"last_7_days\", label: \"Last 7 Days\" },\n      { value: \"last_30_days\", label: \"Last 30 Days\" },\n      { value: \"last_90_days\", label: \"Last 90 Days\" },\n      { value: \"last_365_days\", label: \"Last 365 Days\" },\n    ],\n    []\n  );\n\n  const typeOptions = useMemo(\n    () => [\n      { value: \"date\", label: \"Date\" },\n      { value: \"link\", label: \"Link\" },\n      { value: \"text\", label: \"Text\" },\n    ],\n    []\n  );\n\n  async function getSessionToken() {\n    return (await monday.get(\"sessionToken\")).data;\n  }\n\n  async function updateUser(connectionId: string) {\n    const sessionToken = await getSessionToken();\n\n    const requestBody: HTTPAuthorizationCredentials = {\n      scheme: \"Bearer\",\n      credentials: sessionToken,\n    };\n\n    FacebookService.facebookLogin(connectionId, requestBody).then(\n      (user: User) => {\n        setUser(user);\n      }\n    );\n  }\n\n  const nango = new Nango({\n    publicKey: \"7b73b776-3a10-41c0-a5ee-feef16d372d4\",\n  });\n\n  const connect = () => {\n    if (connector === \"facebook\") {\n      nango\n        .auth(\"facebook\", \"test-connection-id\", {\n          authorization_params: { config_id: \"728465868571401\" },\n        })\n        .then((result) => {\n          updateUser(result.connectionId);\n          // save id to the database.\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      await getSessionToken().then((sessionToken) => {\n        if (sessionToken) {\n          UsersService.usersReadUserByMondaySession(sessionToken).then(\n            (user: User) => {\n              console.log(user);\n              setUser(user);\n            }\n          );\n        }\n      });\n    };\n    fetchUser();\n  }, []);\n\n  useEffect(() => {\n    if (connector == \"facebook\" && user?.facebook_token) {\n      setConnected(true);\n    } else {\n      setConnected(false);\n    }\n  }, [connector]);\n\n  useEffect(() => {\n    if (connected) {\n      if (connector === \"facebook\" && user?.facebook_token) {\n        FacebookService.facebookAdAccounts(user.facebook_token).then(\n          (accounts) => {\n            setAccountOptions(accounts);\n          }\n        );\n        FacebookService.facebookFields().then((fields) => {\n          console.log(fields);\n          setFields(fields);\n        });\n      }\n    }\n  }, [connected, user]);\n\n  useEffect(() => {\n    if (user?.monday_token) {\n      MondayService.mondayBoards(user.monday_token).then((boards: Board[]) => {\n        const boardOptions: Option[] = boards.map((board: Board) => ({\n          value: board.id,\n          label: board.name,\n        }));\n        setBoards(boardOptions);\n      });\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (selectedBoardOption && user?.monday_token && columnType) {\n      MondayService.mondayBoardColumns(\n        selectedBoardOption.value,\n        user.monday_token,\n        columnType.value\n      ).then((columns: BoardColumn[]) => {\n        const columnOptions: Option[] = columns.map((column: BoardColumn) => ({\n          value: column.id,\n          label: column.title,\n        }));\n        setBoardColumns(columnOptions);\n      });\n    }\n  }, [selectedBoardOption, columnType]);\n\n  return (\n    <div className=\"p-2\">\n      <div className=\"border-2 border-gray rounded-md p-5 mb-2\">\n        <p className=\"font-bold text-gray-500 text-sm\">* Application</p>\n        <Dropdown\n          placeholder=\"Select an application\"\n          options={options}\n          onOptionSelect={(e: any) => setConnector(e.value)}\n        />\n        {connected === false && (\n          <Button onClick={() => connect()} className=\"mt-2\">\n            Connect\n          </Button>\n        )}\n      </div>\n      {connected && accountOptions && (\n        <>\n          <div className=\"border-2 border-grey rounded-md p-5 mb-2\">\n            <p className=\"font-bold text-gray-500 text-sm\">* Account</p>\n            <Dropdown\n              placeholder=\"Select an account\"\n              className=\"mb-2\"\n              options={accountOptions}\n              onOptionSelect={(e: Option) => setSelectedAccount(e)}\n            />\n            <p className=\"font-bold text-gray-500 text-sm\">* Fields</p>\n            <Dropdown\n              placeholder=\"Select fields\"\n              multi\n              multiline\n              options={fields}\n              onOptionSelect={(e: Option) => handleFieldSelect(e)}\n            />\n          </div>\n          <div className=\"border-2 border-gray rounded-md p-5\">\n            <p className=\"font-bold text-gray-500 text-sm\">* Board</p>\n            <Dropdown\n              options={boards}\n              placeholder=\"Select a board\"\n              className=\"mb-2\"\n              onOptionSelect={(e: Option) => setSelectedBoardOption(e)}\n            />\n            <p className=\"font-bold text-gray-500 text-sm\">* Column Type</p>\n            <Dropdown\n              placeholder=\"Date or Post Url\"\n              options={typeOptions}\n              className=\"mb-2\"\n              onOptionSelect={(e: Option) => setColumnType(e)}\n            />\n            {columnType?.value === \"link\" || columnType?.value === \"text\" ? (\n              <>\n                <p className=\"font-bold text-gray-500 text-sm\">* Column</p>\n                <Dropdown\n                  options={boardColumns}\n                  onOptionSelect={(e: Option) => setSelectedColumnOption(e)}\n                  placeholder=\"Select column\"\n                  className=\"mb-2\"\n                />\n                <p className=\"font-bold text-gray-500 text-sm\">* Date</p>\n                <Dropdown\n                  placeholder=\"Select a date range\"\n                  options={dateOptions}\n                  className=\"mb-2\"\n                />\n              </>\n            ) : columnType?.value === \"date\" ? (\n              <>\n                <p className=\"font-bold text-gray-500 text-sm\">* Date Column</p>\n                <Dropdown\n                  options={boardColumns}\n                  onOptionSelect={(e: Option) => setSelectedColumnOption(e)}\n                  placeholder=\"Select column\"\n                  className=\"mb-2\"\n                />\n              </>\n            ) : null}\n          </div>\n          <Button onClick={handleRunClick} className=\"mt-2\">\n            Run\n          </Button>\n        </>\n      )}\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
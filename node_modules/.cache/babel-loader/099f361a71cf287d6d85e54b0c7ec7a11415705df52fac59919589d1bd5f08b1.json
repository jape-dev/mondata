{"ast":null,"code":"/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\n\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\nexport class LoginService {\n  /**\n   * Login Access Token\n   * OAuth2 compatible token login, get an access token for future requests\n   * @param formData\n   * @returns Token Successful Response\n   * @throws ApiError\n   */\n  static loginLoginAccessToken(formData) {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/api/v1/login/access-token',\n      formData: formData,\n      mediaType: 'application/x-www-form-urlencoded',\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Test Token\n   * Test access token\n   * @returns UserPublic Successful Response\n   * @throws ApiError\n   */\n  static loginTestToken() {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/api/v1/login/test-token'\n    });\n  }\n  /**\n   * Recover Password\n   * Password Recovery\n   * @param email\n   * @returns Message Successful Response\n   * @throws ApiError\n   */\n  static loginRecoverPassword(email) {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/api/v1/password-recovery/{email}',\n      path: {\n        'email': email\n      },\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Reset Password\n   * Reset password\n   * @param requestBody\n   * @returns Message Successful Response\n   * @throws ApiError\n   */\n  static loginResetPassword(requestBody) {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/api/v1/reset-password/',\n      body: requestBody,\n      mediaType: 'application/json',\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n  /**\n   * Recover Password Html Content\n   * HTML Content for Password Recovery\n   * @param email\n   * @returns string Successful Response\n   * @throws ApiError\n   */\n  static loginRecoverPasswordHtmlContent(email) {\n    return __request(OpenAPI, {\n      method: 'POST',\n      url: '/api/v1/password-recovery-html-content/{email}',\n      path: {\n        'email': email\n      },\n      errors: {\n        422: `Validation Error`\n      }\n    });\n  }\n}","map":{"version":3,"names":["OpenAPI","request","__request","LoginService","loginLoginAccessToken","formData","method","url","mediaType","errors","loginTestToken","loginRecoverPassword","email","path","loginResetPassword","requestBody","body","loginRecoverPasswordHtmlContent"],"sources":["/Users/jamespatten/Documents/repos/mondata/src/api/services/LoginService.ts"],"sourcesContent":["/* generated using openapi-typescript-codegen -- do not edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { Body_login_login_access_token } from '../models/Body_login_login_access_token';\nimport type { Message } from '../models/Message';\nimport type { NewPassword } from '../models/NewPassword';\nimport type { Token } from '../models/Token';\nimport type { UserPublic } from '../models/UserPublic';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\nexport class LoginService {\n    /**\n     * Login Access Token\n     * OAuth2 compatible token login, get an access token for future requests\n     * @param formData\n     * @returns Token Successful Response\n     * @throws ApiError\n     */\n    public static loginLoginAccessToken(\n        formData: Body_login_login_access_token,\n    ): CancelablePromise<Token> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/api/v1/login/access-token',\n            formData: formData,\n            mediaType: 'application/x-www-form-urlencoded',\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n    /**\n     * Test Token\n     * Test access token\n     * @returns UserPublic Successful Response\n     * @throws ApiError\n     */\n    public static loginTestToken(): CancelablePromise<UserPublic> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/api/v1/login/test-token',\n        });\n    }\n    /**\n     * Recover Password\n     * Password Recovery\n     * @param email\n     * @returns Message Successful Response\n     * @throws ApiError\n     */\n    public static loginRecoverPassword(\n        email: string,\n    ): CancelablePromise<Message> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/api/v1/password-recovery/{email}',\n            path: {\n                'email': email,\n            },\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n    /**\n     * Reset Password\n     * Reset password\n     * @param requestBody\n     * @returns Message Successful Response\n     * @throws ApiError\n     */\n    public static loginResetPassword(\n        requestBody: NewPassword,\n    ): CancelablePromise<Message> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/api/v1/reset-password/',\n            body: requestBody,\n            mediaType: 'application/json',\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n    /**\n     * Recover Password Html Content\n     * HTML Content for Password Recovery\n     * @param email\n     * @returns string Successful Response\n     * @throws ApiError\n     */\n    public static loginRecoverPasswordHtmlContent(\n        email: string,\n    ): CancelablePromise<string> {\n        return __request(OpenAPI, {\n            method: 'POST',\n            url: '/api/v1/password-recovery-html-content/{email}',\n            path: {\n                'email': email,\n            },\n            errors: {\n                422: `Validation Error`,\n            },\n        });\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAOA,SAASA,OAAO,QAAQ,iBAAiB;AACzC,SAASC,OAAO,IAAIC,SAAS,QAAQ,iBAAiB;AACtD,OAAO,MAAMC,YAAY,CAAC;EACtB;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,OAAcC,qBAAqBA,CAC/BC,QAAuC,EACf;IACxB,OAAOH,SAAS,CAACF,OAAO,EAAE;MACtBM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,4BAA4B;MACjCF,QAAQ,EAAEA,QAAQ;MAClBG,SAAS,EAAE,mCAAmC;MAC9CC,MAAM,EAAE;QACJ,GAAG,EAAG;MACV;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,OAAcC,cAAcA,CAAA,EAAkC;IAC1D,OAAOR,SAAS,CAACF,OAAO,EAAE;MACtBM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE;IACT,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,OAAcI,oBAAoBA,CAC9BC,KAAa,EACa;IAC1B,OAAOV,SAAS,CAACF,OAAO,EAAE;MACtBM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,mCAAmC;MACxCM,IAAI,EAAE;QACF,OAAO,EAAED;MACb,CAAC;MACDH,MAAM,EAAE;QACJ,GAAG,EAAG;MACV;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,OAAcK,kBAAkBA,CAC5BC,WAAwB,EACE;IAC1B,OAAOb,SAAS,CAACF,OAAO,EAAE;MACtBM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,yBAAyB;MAC9BS,IAAI,EAAED,WAAW;MACjBP,SAAS,EAAE,kBAAkB;MAC7BC,MAAM,EAAE;QACJ,GAAG,EAAG;MACV;IACJ,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,OAAcQ,+BAA+BA,CACzCL,KAAa,EACY;IACzB,OAAOV,SAAS,CAACF,OAAO,EAAE;MACtBM,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,gDAAgD;MACrDM,IAAI,EAAE;QACF,OAAO,EAAED;MACb,CAAC;MACDH,MAAM,EAAE;QACJ,GAAG,EAAG;MACV;IACJ,CAAC,CAAC;EACN;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
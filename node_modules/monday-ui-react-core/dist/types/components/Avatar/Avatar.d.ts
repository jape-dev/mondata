import React, { AriaRole } from "react";
import { elementColorsNames } from "monday-ui-react-core/dist/types/utils/colors-vars-map";
import { AvatarSize, AvatarType } from "monday-ui-react-core/dist/types/components/Avatar/AvatarConstants";
import { AvatarBadgeProps } from "monday-ui-react-core/dist/types/components/Avatar/AvatarBadge";
import { TooltipProps } from "monday-ui-react-core/dist/types/components/Tooltip/Tooltip";
import { SubIcon, VibeComponentProps } from "monday-ui-react-core/dist/types/types";
import "monday-ui-react-core/dist/types/components/Avatar/Avatar.scss";
declare type BackgroundColors = typeof elementColorsNames[keyof typeof elementColorsNames];
export interface AvatarProps extends VibeComponentProps {
    src?: string;
    text?: string;
    tooltipProps?: TooltipProps;
    ariaLabel?: string;
    withoutTooltip?: boolean;
    icon?: SubIcon;
    type?: AvatarType;
    /** Class name for the avatar content of text type */
    textClassName?: string;
    /** Class name for a div-wrapper of avatar content */
    avatarContentWrapperClassName?: string;
    backgroundColor?: BackgroundColors;
    customBackgroundColor?: string;
    role?: AriaRole;
    size?: AvatarSize;
    customSize?: number;
    tabIndex?: number;
    ariaHidden?: boolean;
    disabled?: boolean;
    isSquare?: boolean;
    isDisabled?: boolean;
    square?: boolean;
    topLeftBadgeProps?: AvatarBadgeProps;
    topRightBadgeProps?: AvatarBadgeProps;
    bottomLeftBadgeProps?: AvatarBadgeProps;
    bottomRightBadgeProps?: AvatarBadgeProps;
    withoutBorder?: boolean;
    onClick?: (event: React.MouseEvent | React.KeyboardEvent, avatarId: string) => void;
}
declare const Avatar: React.FC<AvatarProps> & {
    types?: typeof AvatarType;
    sizes?: typeof AvatarSize;
    colors?: BackgroundColors;
    backgroundColors?: BackgroundColors;
};
export default Avatar;

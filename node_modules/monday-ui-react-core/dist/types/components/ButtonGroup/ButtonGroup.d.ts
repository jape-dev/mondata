import React from "react";
import { ButtonValue } from "monday-ui-react-core/dist/types/components/ButtonGroup/ButtonGroupConstants";
import { DialogPosition, SIZES } from "monday-ui-react-core/dist/types/constants";
import { ButtonType, Size } from "monday-ui-react-core/dist/types/components/Button/ButtonConstants";
import { SubIcon, VibeComponentProps } from "monday-ui-react-core/dist/types/types";
import { MoveBy } from "monday-ui-react-core/dist/types/types/MoveBy";
import "monday-ui-react-core/dist/types/components/ButtonGroup/ButtonGroup.scss";
declare type ButtonGroupOption = {
    icon?: SubIcon;
    leftIcon?: SubIcon;
    ariaLabel?: string;
    subText?: string;
    value: ButtonValue;
    text: string;
    disabled?: boolean;
    tooltipContent?: string;
};
interface ButtonGroupProps extends VibeComponentProps {
    className?: string;
    /**
     * Backward compatibility for props naming - please use className instead
     */
    componentClassName?: string;
    options: Array<ButtonGroupOption>;
    value?: ButtonValue;
    onSelect?: (value: ButtonValue, name: string) => void;
    size?: Size;
    kind?: ButtonType.SECONDARY | ButtonType.TERTIARY;
    name?: string;
    disabled?: boolean;
    groupAriaLabel?: string;
    /**
     * Where the tooltip should be in reference to the children: Top, Left, Right, Bottom ...
     */
    tooltipPosition?: DialogPosition;
    tooltipHideDelay?: number;
    tooltipShowDelay?: number;
    tooltipContainerSelector?: string;
    tooltipMoveBy?: MoveBy;
}
declare const ButtonGroup: React.ForwardRefExoticComponent<ButtonGroupProps & React.PropsWithChildren<unknown>> & {
    sizes?: typeof SIZES;
    kinds?: typeof ButtonType;
};
export default ButtonGroup;
